version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: rag-eval-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rag_evaluation
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant:v1.12.1
    container_name: rag-eval-qdrant
    ports:
      - "6335:6333"
      - "6336:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-eval-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/rag_evaluation
      QDRANT_URL: http://qdrant:6333
      # Note: 호스트에서 접근 시 localhost:5433, localhost:6335 사용
      EMBEDDING_DEVICE: cpu
      API_HOST: 0.0.0.0
      API_PORT: 8000
      CORS_ORIGINS: http://localhost:5174,http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-eval-frontend
    ports:
      - "5174:5174"
    environment:
      VITE_API_URL: http://localhost:8000
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  qdrant_data:
